<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

 
     
    <!-- 配置base数据源 -->
    <!-- Druid -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
        init-method="init"  destroy-method="close">


        <!-- 本机地址 -->
        <property name="url" value="jdbc:mysql://localhost:3306/jk?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true" />
        <property name="username" value="root" />
        <property name="password" value="root" />

        <!-- 测试地址 -->
        <!--<property name="url" value="jdbc:mysql://localhost:3306/gzfppt?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true" />
        <property name="username" value="jyjt" />
        <property name="password" value="!QAZ2wsx#EDC" />-->

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="0" />
        <property name="minIdle" value="0" />
        <property name="maxActive" value="100" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="select 1 from dual" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        
        <!-- 对于长时间不使用的连接强制关闭 -->
		<property name="removeAbandoned" value="true" />
    </bean>

    <!-- 注册SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        
        <!-- 自动扫描mappers.xml文件 -->
        <property name="mapperLocations" value="classpath:com/ns/mapper/*.xml" />
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ns.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <bean id="httpSolrClient" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <!-- Windows本机安装的solr地址 -->
        <constructor-arg index="0" value="http://192.168.10.86:8080/solr/new_core"/>
        <!-- Linux的solr地址-->
        <!--<constructor-arg index="0" value="http://192.168.152.128:8080/solr/new_core"/>-->
    </bean>


</beans>